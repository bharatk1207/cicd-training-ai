name: Python Tests

on:
  push:
    branches:
      - '**'  # This will trigger on all branch pushes
  pull_request:
    branches:
      - main   # This will trigger on PRs targeting main

permissions:
  contents: write
  pull-requests: write

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.11']  # Using the same Python version as your local environment

    steps:
    - name: Check out repository
      uses: actions/checkout@v4  # Latest checkout action

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5  # Latest Python setup action
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'  # Caching pip dependencies

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flask pytest pytest-flask

    - name: Run tests
      run: |
        pytest -v

    - name: Check PR mergeability
      if: github.event_name == 'pull_request' && success()
      run: |
        # Configure Git
        git config --global user.email "github-actions[bot]@users.noreply.github.com"
        git config --global user.name "GitHub Actions"
        
        # Check if PR is mergeable
        if [[ $(gh pr view ${{ github.event.pull_request.number }} --json mergeable -q .mergeable) == "true" ]]; then
          echo "PR is mergeable. Proceeding with auto-merge..."
          gh pr merge ${{ github.event.pull_request.number }} --merge --auto
        else
          echo "PR has merge conflicts. Manual intervention required."
          echo "Please resolve conflicts locally and push changes."
          # Don't exit with error - this allows the workflow to pass while indicating merge status
        fi
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
